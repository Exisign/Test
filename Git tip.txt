GIT HUB

윈도우 같은 경우 Git bash라는 터미널 형식의 것이 있다.


1. 저장소 만들기(윈도우 기준)

: 폴더를 만들고, 우클릭해서 Git bash를 띄운다.

그리고 [git init] 이라는 명령어를 쳐주면 해당 저장소가 초기화 된다.

이후 사이트에 등록된 자신의 원격 주소를 아래와 같이 입력하면

원격지에 주소를 찾아간다.


[git remote add origin https://github.com/아이디/Repository명]


(!단, Repository가 없을 경우, github 사이트 접속 후, Repositories 라는 항목을 찾은 뒤.
[New] / [New repository] 버튼을 눌러서 만들어 주면 된다. 이름만 지어주고,
[Create repositoies] 버튼을 통해서 repository 생성을 완료 한다.
'https://github.com/아이디/Repository명' 은 Github를 통해 해당 repository로 들어가게 되면 상단에 있는 주소와 동일하다. )


2. 파일을 관리 대상으로 지정.

: 아무 형식의 파일을 하나 만들고, [git status] 라고 입력하면 [관리 대상으로 지정]되지 아직 되지 않았다는 문구가 뜬다.

: 여기에 [git add 파일명 혹은 . ]을 입력해주면, 해당 파일 혹은 전체 파일이 [관리 대상으로 지정]된다. 관리 대상이 되었을 뿐

Commit 되어 로그에 남거나, Push되어 서버에 적용된 것이 아니기 때문에 헷갈리지 말자.


---------------------------안봐도 됨.-------------------------------------
: 파일을 수정하게 되면, SVN과 마찬가지로 modified 상태가 된다.
-> 단 SVN과 다른 점은 SVN은 관리 대상의 지정 없이 바로 commit이 바로 됨.
--------------------------------------------------------------------------


3. commit과 push를 하는 방법.

: [git commit -m '파일명']

위의 행동에 앞서, git은 처음 사용할 경우, 초기에 자신의 정보를 적어줘야 한다.

: [git config --global user.email "깃허브 이메일"]
: [git config --global user.name "깃허브 아이디"]

: [git commit -m 'test']


커밋을 하면, 이것을 저장을 해야 한다. 저장소에 처음 저장하게 되면 master 라는 기본 [브런치]를 가지며,
해당 브런치에 적용하는 방법은 아래와 같다.

: [git push -u origin master]
: [깃허브 아이디]
: [깃허브 비밀번호] 를 입력하면 repository에서 새로 고침하면 원격지에 저장된 파일을 확인 가능하다.


4. 소스 관리

: 코드 수정 후

:[git status] 를 치면 역시 modified가 뜨고,
:[git add .]를 쳐주면 관리대상이 되고.
:[git status]
:[git commit -m 'test']
:[git push] 한번 저장한 뒤에는, 그냥 이렇게 해주면 됨.
:[아이디]
:[비밀번호]


5. 새 브런치 만들기

: 브런치란. 원형을 고치는 것이 아닌, 가품을 고치는 것. 이는 원형을 손상하면 안될 경우에 사용하는 것임.

:[git chechout -b beta]
:[git branch]

하면 beta로 chechout 한 것을 확인할 수 있다. * chechout 은 그냥 이동했다고 생각하면 된다.

6. 새 브런치에 파일 푸쉬

: [새 파일을 만들고]
: [git status]
: [git add .]
: [git commit -m '파일명']
: [git push -u origin beta]


7. 브런치간 Merge 파일 합치기

: 새 파일을 commit하고 실제 사용하는 master branch로 옮기는 작업. *merge

: [git chechout master]
: [git merge beta]

: 베타 브런치에 있던 정보들이 마스터 브런치로 이동하게 된다.
: 해당 부분까지 하면 로컬에서만 저장된다.

: [git push]
: [아이디]
: [비밀번호] 까지 입력하게 되면, 저장이 되는것을 확인 할 수 있다.


8. Clone 	-	Git을 이용한 Git 파일 받기

: [git clone git://github주소.git]


9. 저장소를 최신 내용으로 업데이트하기

: [git pull]


10. Git Add / Commit 취소

: [git reset HEAD '파일명' / git reset HEAD^ ] 

해당 명령어는 되돌린 후, 내역의 삭제 후에도 Commit이 1개 이상 남아있을 경우에 가능하다.

Commit이 단 하나 밖에 없을 경우

: [git revert 되돌릴커밋넘버(git log를 통해서 조회 가능)] 


11. Commit Massage 변경

: git commit --amend


***(Git Bash 기준) 한글 적용이 되지 않을 때

:[창 상단 우클릭] -> [Options] -> 왼쪽 상단 Text -> Locale : ko_KR / Character set : UTF-8 설정